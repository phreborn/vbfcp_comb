/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef BACKGROUND
#define BACKGROUND

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "TH1F.h"

class Background : public RooAbsPdf {
public:
    Background() {} ;
    Background(const char *name, const char *title,
               RooAbsReal& _x,
               RooAbsReal& _p2,
               RooAbsReal& _p3,
               RooAbsReal& _xi,
               int btype);
    Background(const Background& other, const char* name=0) ;
    virtual TObject* clone(const char* newname) const { return new Background(*this,newname); }
    inline virtual ~Background() { }
    
    int getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* /*rangeName*/) const;
    double analyticalIntegral(Int_t code, const char* /*rangeName*/) const;
    
protected:
    
    RooRealProxy x ;
    RooRealProxy p2 ;
    RooRealProxy p3 ;
    RooRealProxy xi ;
    mutable int m_btype;

    Double_t evaluate() const ;
     
private:
    
    double dndx(double mass, double p2, double p3, double xi) const;
    double Integrate(double m1, double m2, double p2, double p3, double xi) const;
    double IntegrateTail(double x_tail_low, double p2, double p3, double xi) const;
    ClassDef(Background,1) // Your description goes here...
};

#endif
